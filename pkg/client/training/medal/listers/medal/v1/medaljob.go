/*
Copyright 2021.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "hccl-controller/pkg/apis/training/medal/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MedalJobLister helps list MedalJobs.
// All objects returned here must be treated as read-only.
type MedalJobLister interface {
	// List lists all MedalJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.MedalJob, err error)
	// MedalJobs returns an object that can list and get MedalJobs.
	MedalJobs(namespace string) MedalJobNamespaceLister
	MedalJobListerExpansion
}

// medalJobLister implements the MedalJobLister interface.
type medalJobLister struct {
	indexer cache.Indexer
}

// NewMedalJobLister returns a new MedalJobLister.
func NewMedalJobLister(indexer cache.Indexer) MedalJobLister {
	return &medalJobLister{indexer: indexer}
}

// List lists all MedalJobs in the indexer.
func (s *medalJobLister) List(selector labels.Selector) (ret []*v1.MedalJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MedalJob))
	})
	return ret, err
}

// MedalJobs returns an object that can list and get MedalJobs.
func (s *medalJobLister) MedalJobs(namespace string) MedalJobNamespaceLister {
	return medalJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MedalJobNamespaceLister helps list and get MedalJobs.
// All objects returned here must be treated as read-only.
type MedalJobNamespaceLister interface {
	// List lists all MedalJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.MedalJob, err error)
	// Get retrieves the MedalJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.MedalJob, error)
	MedalJobNamespaceListerExpansion
}

// medalJobNamespaceLister implements the MedalJobNamespaceLister
// interface.
type medalJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MedalJobs in the indexer for a given namespace.
func (s medalJobNamespaceLister) List(selector labels.Selector) (ret []*v1.MedalJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MedalJob))
	})
	return ret, err
}

// Get retrieves the MedalJob from the indexer for a given namespace and name.
func (s medalJobNamespaceLister) Get(name string) (*v1.MedalJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("medaljob"), name)
	}
	return obj.(*v1.MedalJob), nil
}
