component: hccl-controller
product: MindXDL
systemEnv:
  - workspace
  - processor

compile:
  input:
    envVariables:
      GO111MODULE: "on"
      GONOSUMDB: "*"
      GOPROXY: "http://mirrors.tools.huawei.com/goproxy,direct"
      CGO_ENABLED: "1"
      CGO_CFLAGS: "-fstack-protector-strong -D_FORTIFY_SOURCE=2 -O2 -fPIC -ftrapv"
      CGO_CPPFLAGS: "-fstack-protector-strong -D_FORTIFY_SOURCE=2 -O2 -fPIC -ftrapv"
    files:
      exclude:
        - remove:
            - "{{ systemEnv.workspace }}/{{ component}}/output"
  process:
    language: go
    compilePath: "{{ systemEnv.workspace }}/{{ component}}/"
    parameters: [
    ["mod", "mod"],
    ["buildmode", "pie"],
    ["ldflags", '-s -extldflags=-Wl,-z,now  -X "main.BuildName=hccl-controller"  -X "main.BuildVersion={{version}}_linux-{{systemEnv.processor}}"'],
    ["o", "{{component}}"],
    ]

  output:
    files:
      include:
        - move:
            src: ['{{ systemEnv.workspace }}/{{component}}/hccl-controller']
            des: '{{ systemEnv.workspace }}/{{component}}/output'
        - copy:
            src: ['{{ systemEnv.workspace }}/{{component}}/build/hccl-controller.yaml']
            des: "{{ systemEnv.workspace }}/{{component}}/output/hccl-controller-{{version}}.yaml"
            rename: True
        - sed:
            option: "-i"
            srcstr: "s/hccl-controller:.*/hccl-controller:{{verison}}/"
            curfile: "{{ systemEnv.workspace }}/{{component}}/output/hccl-controller-{{version}}.yaml"
        - copy:
            src: ['{{ systemEnv.workspace }}/{{component}}/build/hccl-controller-without-token.yaml']
            des: "{{ systemEnv.workspace }}/{{component}}/output/hccl-controller-without-token-{{version}}.yaml"
            rename: True
        - sed:
            option: "-i"
            srcstr: "s/hccl-controller:.*/hccl-controller:{{verison}}/"
            curfile: "{{ systemEnv.workspace }}/{{component}}/output/hccl-controller-without-token-{{version}}.yaml"
        - copy:
            src: ['{{ systemEnv.workspace }}/{{component}}/build/Dockerfile']
            des: "{{ systemEnv.workspace }}/{{component}}/output/"
        - mode:
            src: ["{{ systemEnv.workspace }}/{{component}}/output/*"]
            mode: "400"
        - mode:
            src: [ "{{ systemEnv.workspace }}/{{component}}/output/hccl-controller" ]
            mode: "500"
        - commands:
            - command: "unzip -n -d {{ systemEnv.workspace }}/{{component}}/npu-exporter/ {{ systemEnv.workspace }}/{{ component}}/npu-exporter/Ascend-mindxdl-npu-exporter_*_linux-{{systemEnv.processor}}.zip"
            - command: "if [ -d '{{ systemEnv.workspace }}/{{component}}/npu-exporter' ];
        then cp -rf {{ systemEnv.workspace }}/{{component}}/npu-exporter/lib {{ systemEnv.workspace }}/{{component}}/output;
        cp -rf {{ systemEnv.workspace }}/{{component}}/npu-exporter/cert-importer {{ systemEnv.workspace }}/{{component}}/output;
        chmod 550 {{ systemEnv.workspace }}/{{component}}/output/lib;
        chmod 500 {{ systemEnv.workspace }}/{{component}}/output/lib/*;
        chmod 500 {{ systemEnv.workspace }}/{{component}}/output/cert-importer;fi"
        - makeArchive:
            - src: "{{ systemEnv.workspace }}/{{component}}/output"
              des: "{{ systemEnv.workspace }}/{{component}}/output/Ascend-mindxdl-hccl-controller_{{pkgversion}}_linux-{{ systemEnv.processor }}"
              prefix: zip
              arch: "{{ systemEnv.processor }}"

test:
  input:
  process:
    type: ut
    testTool: shell
    execdir: "{{systemEnv.workspace}}/{{component}}/build"
    parameters: ""
    script: "test.sh"
  output: