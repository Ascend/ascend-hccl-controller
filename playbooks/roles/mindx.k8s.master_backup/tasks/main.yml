- name: message
  debug:
    msg: "******************************start join k8s on master_backup******************************"

- name: message
  debug:
    msg: "master_backup can not contain master in inventory_file, please check"
  failed_when: true
  when:
    - "'master_backup' in groups"
    - item == groups['master'][0]
  loop: "{{ groups['master_backup'] }}"

- name: check k8s
  shell: "kubectl cluster-info 2>&1 | grep 'is running at' | wc -l"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  register: cluster_info

- name: message
  debug:
    msg: "k8s is running already, please check"
  failed_when: true
  when: cluster_info.stdout != "0"

- name: not apiserver_advertise_address
  set_fact:
    addr_cmd: ""

- name: set apiserver_advertise_address
  set_fact:
    addr_cmd: "--apiserver-advertise-address {{ apiserver_advertise_address }}"
  when:
    - apiserver_advertise_address is defined

- name: get token
  shell: kubeadm token create --print-join-command
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  delegate_to: "{{ groups['master'][0] }}"
  register: token_cmd

- name: get certificate-key
  shell: kubeadm init phase upload-certs --upload-certs
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  delegate_to: "{{ groups['master'][0] }}"
  run_once: true
  register: cert_cmd

- name: join cluster
  shell: "{{ token_cmd.stdout }} --control-plane --certificate-key {{ cert_cmd.stdout.split('key:\n')[-1] }} {{ addr_cmd }}"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""

- name: create kube directory
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: 0750

- name: set cluster config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_env.HOME }}/.kube/config"
    mode: "0640"
    remote_src: yes

- name: taint nodes
  shell: kubectl taint nodes {{ansible_hostname}} node-role.kubernetes.io/master-
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""

- name: label worker
  shell: |
    kubectl label --overwrite node {{ansible_hostname}} masterselector=dls-master-node
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
