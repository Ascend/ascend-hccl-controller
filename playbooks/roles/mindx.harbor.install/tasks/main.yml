- name: message
  debug:
    msg: "******************************start install harbor******************************"

- name: message
  debug:
    msg: "There can only be one harbor in inventory_file, please check"
  failed_when: true
  when: "'harbor' not in groups or groups['harbor'] | length != 1"

- name: message
  debug:
    msg: "no harbor password is set, please check"
  when: HARBOR_PASSWORD | length == 0
  failed_when: HARBOR_PASSWORD | length == 0

- name: set HARBOR_IP
  set_fact:
    HARBOR_IP: "{{ ansible_default_ipv4.address if HARBOR_HOST_IP == '' else HARBOR_HOST_IP }}"
    cacheable: yes

- name: check harbor service
  shell: systemctl is-active harbor | grep '^active$' | wc -l
  register: harbor_status
  changed_when: false

- name: install harbor
  include_tasks: install.yml
  when: harbor_status.stdout == "0"

- name: create certificate directory on controller
  local_action:
    module: file
    path: "{{ item }}"
    state: directory
    mode: 0700
  loop:
    - "/etc/docker/certs.d/{{HARBOR_IP}}:{{HARBOR_HTTPS_PORT}}/"
    - /etc/kubeedge/ca/

- name: copy harbor certs from remote to controller
  ansible.builtin.fetch:
    src: "/etc/docker/certs.d/{{HARBOR_IP}}:{{HARBOR_HTTPS_PORT}}/rootCA.crt"
    dest: "/etc/docker/certs.d/{{HARBOR_IP}}:{{HARBOR_HTTPS_PORT}}/"
    flat: yes

- name: copy harbor certs from remote to controller
  ansible.builtin.fetch:
    src: "/etc/kubeedge/ca/rootCA.crt"
    dest: "/etc/kubeedge/ca/"
    flat: yes

- name: message
  debug:
    msg: "harbor is running already"
  when: harbor_status.stdout == "1"
