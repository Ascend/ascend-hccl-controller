- name: message
  debug:
    msg: "******************************start install nfs server******************************"

- name: install nfs server
  shell: |
      dpkg --force-all -i {{ client_deb }}/*.deb
      dpkg --force-all -i {{ server_deb }}/*.deb
  environment:
    DEBIAN_FRONTEND: noninteractive
    DEBIAN_PRIORITY: critical
  when: OS_ID == 'ubuntu'

- name: create nfs path
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ DL_USR }}"
    group: "{{ DL_GRP }}"
    mode: 0750
  loop:
    - "{{ DL_PATH }}"
    - "{{ PLATFORM_PATH }}"
    - "{{ PLATFORM_PATH }}/kmc"
    - "{{ PLATFORM_PATH }}/log"
    - "{{ PLATFORM_PATH }}/log/apigw"
    - "{{ PLATFORM_PATH }}/log/cluster-manager"
    - "{{ PLATFORM_PATH }}/log/data-manager"
    - "{{ PLATFORM_PATH }}/log/dataset-manager"
    - "{{ PLATFORM_PATH }}/log/edge-manager"
    - "{{ PLATFORM_PATH }}/log/label-manager"
    - "{{ PLATFORM_PATH }}/log/model-manager"
    - "{{ PLATFORM_PATH }}/log/task-manager"
    - "{{ PLATFORM_PATH }}/log/train-manager"
    - "{{ PLATFORM_PATH }}/log/user-manager"
    - "{{ PLATFORM_PATH }}/log/alarm-manager"

- name: create nfs path for image-manager log
  file:
    path: "{{ PLATFORM_PATH }}/log/image-manager"
    state: directory
    owner: root
    group: root
    mode: 0750

- name: config nfs /etc/exports
  ansible.builtin.lineinfile:
    path: /etc/exports
    regexp: "^{{ item.path }} "
    line: "{{ item.path }} {{ MASTER_WORKER_IP | join('(rw,sync,no_root_squash) ') | replace('localhost', MASTER_IP) }}(rw,sync,no_root_squash)"
    state: present
  loop:
    - { "path": "{{ DL_PATH }}" }

- name: "restart nfs"
  systemd:
    name: "nfs-server"
    enabled: true
    state: restarted
