- name: label huawei-x86
  shell: kubectl label --overwrite node {{ ansible_hostname }} host-arch=huawei-x86
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: ansible_architecture == "x86_64"

- name: label huawei-arm
  shell: kubectl label --overwrite node {{ ansible_hostname }} host-arch=huawei-arm
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: ansible_architecture == "aarch64"

- name: check device
  shell: lspci | grep "Processing accelerators"
  register: processing_accelerator
  ignore_errors: yes

- name: message
  debug:
    msg: "can not find npu card, please check"
  when: processing_accelerator.rc != 0

- name: label ascend310
  shell: kubectl label --overwrite node {{ ansible_hostname }} accelerator=huawei-Ascend310
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: "'Device d100' in processing_accelerator.stdout"

- name: label ascend310P
  shell: kubectl label --overwrite node {{ ansible_hostname }} accelerator=huawei-Ascend310P
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: "'Device d500' in processing_accelerator.stdout"

- name: label ascend910
  shell: kubectl label --overwrite node {{ ansible_hostname }} accelerator=huawei-Ascend910
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: "'Device d801' in processing_accelerator.stdout"

- name: label apigw-selector master
  shell: kubectl label --overwrite node {{ansible_hostname}} apigw-selector=apigw-business-worker-node
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  run_once: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: "'worker' not in groups or groups['worker'] | length == 0"

- name: label apigw-selector worker
  shell: kubectl label --overwrite node {{ hostvars[groups['worker'][0]]['ansible_hostname'] }} apigw-selector=apigw-business-worker-node
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  run_once: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: "'worker' in groups and groups['worker'] | length != 0"
