- name: create group {{ DL_GRP }}
  ansible.builtin.group:
    name: "{{ DL_GRP }}"
    state: present
    gid: "{{ DL_GID }}"
  ignore_errors: true

- name: create user {{ DL_USR }}
  ansible.builtin.user:
    name: "{{ DL_USR }}"
    comment: "{{  DL_USR }}"
    uid: "{{ DL_UID }}"
    group: "{{ DL_GRP }}"
    state: present
  ignore_errors: true

- name: create /etc/mindx-dl
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{DL_USR}}"
    group: "{{DL_GRP}}"
    mode: 0700
  ignore_errors: true
  loop:
    - /etc/mindx-dl
    - /etc/mindx-dl/edge-manager

- name: create log directories for "{{DL_USR}}"
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{DL_USR}}"
    group: "{{DL_GRP}}"
    mode: 0750
  loop:
    - /var/log/mindx-dl
    - /var/log/mindx-dl/apigw
    - /var/log/mindx-dl/access-manager
    - /var/log/mindx-dl/cluster-manager
    - /var/log/mindx-dl/data-manager
    - /var/log/mindx-dl/dataset-manager
    - /var/log/mindx-dl/label-manager
    - /var/log/mindx-dl/edge-manager
    - /var/log/mindx-dl/hccl-controller
    - /var/log/mindx-dl/model-manager
    - /var/log/mindx-dl/noded
    - /var/log/mindx-dl/task-manager
    - /var/log/mindx-dl/train-manager
    - /var/log/mindx-dl/user-manager
    - /var/log/mindx-dl/volcano-controller
    - /var/log/mindx-dl/volcano-scheduler

- name: create log directories for root
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0750
  loop:
    - /var/log/mindx-dl/image-manager
    - /var/log/mindx-dl/devicePlugin
    - /var/log/mindx-dl/npu-exporter
    - /var/log/mindx-dl/license-manager

- name: delete old hostname in /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regex: "127.0.*{{ansible_hostname}}"
    state: absent

- name: set hostname
  ansible.builtin.hostname:
    name: "{{set_hostname}}"
  when: set_hostname is defined

- name: add new hostname in /etc/hosts
  lineinfile:
    dest: /etc/hosts
    line: "127.0.1.1 {{ set_hostname }}"
  when: set_hostname is defined

- name: install haveged
  shell: dpkg --force-all -i {{ haveged_dir }}/*.deb
  environment:
    DEBIAN_FRONTEND: noninteractive
    DEBIAN_PRIORITY: critical
  when:
    - OS_ID == 'ubuntu'
    - OS_VERSION_ID == '18.04'
