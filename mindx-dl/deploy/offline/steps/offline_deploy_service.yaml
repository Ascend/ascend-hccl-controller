# Copyright Â© Huawei Technologies Co., Ltd. 2020. All rights reserved.
---
# This playbook is used to deploy the MindX DL platform.
# Before running the script, ensure that the dependent files are stored in the 'dls_root_dir' directory defined in /etc/ansible/hosts.
- hosts: localnode, workers
  remote_user: root

  tasks:
    - name: Create log directory for cadvisor and device-plugin
      file:
        path: /var/log/{{ item }}
        state: directory
        mode: "0750"
      with_items:
        - devicePlugin
        - cadvisor

    - name: Add cadvisor log config information
      blockinfile:
        path: /etc/logrotate.d/mindx_dl_advisor
        block: |
          /var/log/devicePlugin/*.log
          /var/log/cadvisor/*.log{
              daily
              rotate 8
              size 20M
              compress
              dateext
              missingok
              notifempty
              copytruncate
              create 0640 root root
              sharedscripts
              postrotate
                  chmod 640 /var/log/devicePlugin/*.log
                  chmod 640 /var/log/cadvisor/*.log
                  chmod 440 /var/log/devicePlugin/*.log-*
                  chmod 440 /var/log/cadvisor/*.log-*
              endscript
          }
        state: present
        create: yes

- hosts: localnode, master
  remote_user: root
  vars:
    deploy_yaml_dir: "{{ dls_root_dir }}/yamls"

  tasks:
    - name: Remove /var/log/atlas_dls
      file:
        path: /var/log/atlas_dls
        state: absent
      ignore_errors: True

    - name: Create dls_core log directory
      file:
        path: /var/log/atlas_dls/{{ item }}
        state: directory
        mode: "0750"
        owner: 'hwMindX'
        group: 'hwMindX'
      with_items:
        - volcano-controller
        - volcano-scheduler
        - volcano-admission
        - hccl-controller

    - name: Add scheduler log config information
      blockinfile:
        path: /etc/logrotate.d/mindx_dl_scheduler
        block: |
          /var/log/atlas_dls/volcano-*/*.log
          /var/log/atlas_dls/hccl-*/*.log{
              daily
              rotate 8
              size 20M
              compress
              dateext
              missingok
              notifempty
              copytruncate
              create 0640 hwMindX hwMindX
              sharedscripts
              postrotate
                  chmod 640 /var/log/atlas_dls/volcano-*/*.log
                  chmod 640 /var/log/atlas_dls/hccl-*/*.log
                  chmod 440 /var/log/atlas_dls/volcano-*/*.log-*
                  chmod 440 /var/log/atlas_dls/hccl-*/*.log-*
              endscript
          }
        state: present
        create: yes

    - name: Deploy hccl-controller
      shell:
        chdir: "{{ deploy_yaml_dir }}"
        cmd: kubectl apply -f hccl-controller*.yaml

    - name: Deploy device plugin
      shell:
        chdir: "{{ deploy_yaml_dir }}"
        cmd:
          kubectl apply -f ascendplugin-volcano*.yaml;
          kubectl apply -f ascendplugin-310*.yaml;
          kubectl apply -f ascendplugin-710*.yaml

    - name: Deploy cadvisor
      shell:
        chdir: "{{ deploy_yaml_dir }}"
        cmd: kubectl apply -f cadvisor-*.yaml

    - name: Deploy volcano
      shell:
        chdir: "{{ deploy_yaml_dir }}"
        cmd: kubectl apply -f volcano-*.yaml

    # Deleting Software Packages
    - name: Deleting software packages - Ubuntu
      shell:
        chdir: "{{ dls_root_dir }}/base_software/"
        cmd:
          rm libtirpc* rpcbind* libnfsidmap2* keyutils* nfs-common* nfs-kernel-server*;
          rm libltdl7* docker-ce_18.06.3* cri-tools* conntrack* socat*;
          rm kubernetes-cni* kubelet_1.17.3* kubectl_1.17.3* kubeadm_1.17.3*;
      tags: clean_pkg
      ignore_errors: True
      when:
        - ansible_distribution == 'Ubuntu'

    - name: Deleting software packages - CentOS
      shell:
        chdir: "{{ dls_root_dir }}/base_software/"
        cmd:
          rm -rf docker kubernetes libselinux lvm2 nfs selinux versionlock yum-utils;
      tags: clean_pkg
      ignore_errors: True
      when:
        - ansible_distribution == 'CentOS'